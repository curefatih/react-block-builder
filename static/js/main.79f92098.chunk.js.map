{"version":3,"sources":["../../src/components/useDragable/useDragable.tsx","../../src/components/DragableBlock/DragableBlock.tsx","../../src/components/Block/Block.tsx","../../src/components/BlockWrapper/BlockWrapper.tsx","App.tsx","index.tsx"],"names":["DragableBlock","props","mouseDown","x","y","offsetX","offsetY","mouseOffsetX","mouseOffsetY","parentPos","pos","setPos","handleMouseDown","event","current","top","handleMouseMove","e","handleMouseUp","setDragableState","state","useDragable","React","className","styles","onMouseDown","onMouseLeave","onMouseUp","onMouseMove","style","position","left","zIndex","border","undefined","Block","children","head","foot","rest","BlockContext","BlockWrapper","blockEl","handleResize","block","rect","window","value","ref","blockStyle","App","margin","height","width","allowInner","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79f92098.chunk.js","sourcesContent":["import * as React from 'react';\n\n\nconst useDragable = () => {\n\n  const [pos, setPos] = React.useState({\n    mouseDown: false,\n    x: 0,\n    y: 0,\n    offsetX: 0,\n    offsetY: 0,\n    mouseOffsetX: 0,\n    mouseOffsetY: 0,\n    parentPos: {\n      x: 0,\n      y: 0\n    }\n  });\n\n  const setDragableState = (state: Partial<typeof pos>) => {\n    setPos({\n      ...pos,\n      ...state\n    })\n  }\n\n  const handleMouseDown = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\n    if (pos.mouseDown) return\n\n    // @ts-ignore\n    const current = event.target.getBoundingClientRect()\n\n    setPos({\n      ...pos,\n      mouseDown: true,\n      mouseOffsetX: event.clientX - current.left,\n      mouseOffsetY: event.clientY - current.top\n    })\n  }\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\n    if (pos.mouseDown) {\n      setPos({\n        ...pos,\n        x: e.clientX - pos.mouseOffsetX - pos.parentPos.x,\n        y: e.clientY - pos.mouseOffsetY - pos.parentPos.y\n      })\n    }\n\n  };\n\n  const handleMouseUp = () => {\n\n    if (pos.mouseDown) {\n      setPos({\n        ...pos,\n        mouseDown: false\n      })\n    }\n  }\n\n  return {\n    pos,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    setDragableState\n  }\n\n}\n\nexport default useDragable;\n","import * as React from 'react';\nimport useDragable from '../useDragable/useDragable';\nimport styles from './styles.module.css';\n\nexport interface BlockProps extends React.HTMLAttributes<HTMLDivElement> {\n  head: string;\n  foot?: string;\n  allowInner?: boolean;\n  parentPos: DOMRect;\n  children: React.ReactChildren | Function | any\n}\n\nexport function DragableBlock(props: BlockProps) {\n  const { pos, handleMouseDown, handleMouseMove, handleMouseUp, setDragableState } = useDragable();\n\n  React.useEffect(() => {\n    setDragableState({\n      parentPos: {\n        x: props.parentPos.x,\n        y: props.parentPos.y,\n      }\n    })\n  }, [props.parentPos])\n\n  return (\n    <div\n      className={styles.dragableBlock}\n\n      onMouseDown={handleMouseDown}\n      onMouseLeave={handleMouseUp}\n      onMouseUp={handleMouseUp}\n      onMouseMove={handleMouseMove}\n\n      style={{\n        position: \"absolute\",\n        left: `${pos.x}px`,\n        top: `${pos.y}px`,\n        zIndex: pos.mouseDown ? 9999 : \"auto\",\n        border: pos.mouseDown ? \"1px solid #0984e3\" : undefined,\n        ...props.style\n      }}\n    >\n      <div\n\n        className={`${styles.head} ${!props.allowInner && styles.rounded}`}\n      >\n        {props.head}\n      </div>\n      {\n        props.allowInner && (\n          <React.Fragment>\n            <div className={styles.content}>\n              {props.children}\n            </div>\n            <div className={styles.foot}>\n              {props.foot}\n            </div>\n          </React.Fragment>\n        )\n      }\n    </div >\n  );\n};\n","import * as React from 'react';\nimport styles from './styles.module.css';\n\nexport interface BlockProps extends React.HTMLAttributes<HTMLDivElement> {\n  head: string;\n  foot?: string;\n  allowInner?: boolean;\n}\n\nexport const Block: React.SFC<BlockProps> = (props: BlockProps) => {\n\n  const {\n    children,\n    head,\n    foot,\n    allowInner,\n    ...rest\n  } = props;\n\n  return (\n    <div\n      className={styles.block}\n      style={{\n        position: \"relative\",\n      }}\n      {...rest}\n    >\n      <div\n        className={`${styles.head}`}\n      >\n        {head}\n      </div>\n      {\n        props.allowInner && (\n          <React.Fragment>\n            <div className={styles.content}>\n              {children}\n            </div>\n            <div className={styles.foot}>\n              {foot}\n            </div>\n          </React.Fragment>\n        )\n      }\n    </div >\n  );\n}\n","import * as React from 'react'\nimport styles from './styles.module.css'\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  blockStyle?: React.CSSProperties,\n  // Here i used Function as type but probably wrong\n  children: Function\n}\n\n// idk, its necessary to give context but might need\nexport const BlockContext = React.createContext<any>(null);\n\nexport const BlockWrapper = (props: Props) => {\n  const [pos, setPos] = React.useState({} as DOMRect);\n  const blockEl = React.useRef<HTMLDivElement>(null);\n\n  const handleResize = () => {\n    if (blockEl.current) {\n\n      const block = blockEl.current;\n\n      block.style.width = block.parentElement?.style.width || \"inherit\";\n      block.style.height = block.parentElement?.style.height || \"inherit\";\n\n      const rect = block.getBoundingClientRect();\n      setPos(rect);\n    }\n  }\n\n  React.useEffect(() => {\n\n    handleResize();\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    }\n  }, [])\n\n  return (\n    <BlockContext.Provider value={pos}>\n      <div ref={blockEl} className={styles.blockBuilder} style={props.blockStyle}>\n        {props.children(pos)}\n      </div>\n    </BlockContext.Provider>\n  )\n}\n","import React from 'react'\n\nimport { Block, BlockWrapper, DragableBlock } from 'block-builder'\nimport 'block-builder/dist/index.css'\n\nconst App = () => {\n  return (\n    <div style={{ margin: \"0 auto\", height: \"500px\", width: \"500px\" }}>\n      <BlockWrapper\n        blockStyle={{\n          height: \"100px\",\n          border: \"1px solid #333\"\n        }}\n      >\n        {(value: DOMRect) =>\n          <>\n            Your components\n            <DragableBlock head=\"Heading\" allowInner parentPos={value} style={{ width: 300 }}>\n              inner components\n              <Block head=\"Allowing content\" allowInner style={{ width: \"100%\" }}>components</Block>\n              <Block head=\"I am not allowing content\" style={{ width: \"100%\" }}>components</Block>\n            </DragableBlock>\n            <DragableBlock head=\"Heading\" allowInner parentPos={value} style={{ width: 300 }}>\n              components\n            </DragableBlock>\n          </>\n        }\n      </BlockWrapper>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}